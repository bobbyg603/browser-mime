{"version":3,"sources":["../dist/browser-mime-db.json","../node_modules/process/browser.js","../node_modules/path-browserify/index.js","index.js"],"names":["module","exports","source","compressible","extensions","charset","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","db","require","extname","EXTRACT_TYPE_REGEXP","TEXT_TYPE_REGEXP","type","match","exec","mime","toLowerCase","test","contentType","str","indexOf","lookup","extension","exts","path","substr","types","populateMaps","preference","undefined","Object","keys","forEach","from","to","charsets","create"],"mappings":"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","file":"index.js","sourceRoot":"../mime-types","sourcesContent":["module.exports={\"application/xhtml+xml\":{source:\"iana\",compressible:!0,extensions:[\"xhtml\",\"xht\"]},\"application/atom+xml\":{source:\"iana\",compressible:!0,extensions:[\"atom\"]},\"application/ecmascript\":{source:\"iana\",compressible:!0,extensions:[\"ecma\",\"es\"]},\"application/geo+json\":{source:\"iana\",compressible:!0,extensions:[\"geojson\"]},\"application/javascript\":{source:\"iana\",charset:\"UTF-8\",compressible:!0,extensions:[\"js\",\"mjs\"]},\"application/json\":{source:\"iana\",charset:\"UTF-8\",compressible:!0,extensions:[\"json\",\"map\"]},\"application/jsonml+json\":{source:\"apache\",compressible:!0,extensions:[\"jsonml\"]},\"application/ld+json\":{source:\"iana\",compressible:!0,extensions:[\"jsonld\"]},\"application/manifest+json\":{charset:\"UTF-8\",compressible:!0,extensions:[\"webmanifest\"]},\"application/ogg\":{source:\"iana\",compressible:!1,extensions:[\"ogx\"]},\"application/rss+xml\":{source:\"apache\",compressible:!0,extensions:[\"rss\"]},\"application/x-web-app-manifest+json\":{compressible:!0,extensions:[\"webapp\"]},\"application/xml\":{source:\"iana\",compressible:!0,extensions:[\"xml\",\"xsl\",\"xsd\",\"rng\"]},\"audio/mp3\":{compressible:!1,extensions:[\"mp3\"]},\"audio/mp4\":{source:\"iana\",compressible:!1,extensions:[\"m4a\",\"mp4a\"]},\"audio/mpeg\":{source:\"iana\",compressible:!1,extensions:[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"]},\"audio/ogg\":{source:\"iana\",compressible:!1,extensions:[\"oga\",\"ogg\",\"spx\"]},\"audio/wav\":{compressible:!1,extensions:[\"wav\"]},\"audio/webm\":{source:\"apache\",compressible:!1,extensions:[\"weba\"]},\"audio/x-wav\":{source:\"apache\",extensions:[\"wav\"]},\"image/apng\":{compressible:!1,extensions:[\"apng\"]},\"image/bmp\":{source:\"iana\",compressible:!0,extensions:[\"bmp\"]},\"image/gif\":{source:\"iana\",compressible:!1,extensions:[\"gif\"]},\"image/jpeg\":{source:\"iana\",compressible:!1,extensions:[\"jpeg\",\"jpg\",\"jpe\"]},\"image/png\":{source:\"iana\",compressible:!1,extensions:[\"png\"]},\"image/svg+xml\":{source:\"iana\",compressible:!0,extensions:[\"svg\",\"svgz\"]},\"image/vnd.microsoft.icon\":{source:\"iana\",extensions:[\"ico\"]},\"image/webp\":{source:\"apache\",extensions:[\"webp\"]},\"image/x-icon\":{source:\"apache\",compressible:!0,extensions:[\"ico\"]},\"image/x-xbitmap\":{source:\"apache\",extensions:[\"xbm\"]},\"text/cache-manifest\":{source:\"iana\",compressible:!0,extensions:[\"appcache\",\"manifest\"]},\"text/coffeescript\":{extensions:[\"coffee\",\"litcoffee\"]},\"text/css\":{source:\"iana\",charset:\"UTF-8\",compressible:!0,extensions:[\"css\"]},\"text/html\":{source:\"iana\",compressible:!0,extensions:[\"html\",\"htm\",\"shtml\"]},\"text/jade\":{extensions:[\"jade\"]},\"text/jsx\":{compressible:!0,extensions:[\"jsx\"]},\"text/less\":{compressible:!0,extensions:[\"less\"]},\"text/markdown\":{source:\"iana\",compressible:!0,extensions:[\"markdown\",\"md\"]},\"text/mathml\":{source:\"nginx\",extensions:[\"mml\"]},\"text/n3\":{source:\"iana\",compressible:!0,extensions:[\"n3\"]},\"text/plain\":{source:\"iana\",compressible:!0,extensions:[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"]},\"text/prs.lines.tag\":{source:\"iana\",extensions:[\"dsc\"]},\"text/richtext\":{source:\"iana\",compressible:!0,extensions:[\"rtx\"]},\"text/sgml\":{source:\"iana\",extensions:[\"sgml\",\"sgm\"]},\"text/shex\":{extensions:[\"shex\"]},\"text/slim\":{extensions:[\"slim\",\"slm\"]},\"text/stylus\":{extensions:[\"stylus\",\"styl\"]},\"text/troff\":{source:\"iana\",extensions:[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"]},\"text/turtle\":{source:\"iana\",charset:\"UTF-8\",extensions:[\"ttl\"]},\"text/uri-list\":{source:\"iana\",compressible:!0,extensions:[\"uri\",\"uris\",\"urls\"]},\"text/vnd.curl\":{source:\"iana\",extensions:[\"curl\"]},\"text/vnd.curl.dcurl\":{source:\"apache\",extensions:[\"dcurl\"]},\"text/vnd.curl.mcurl\":{source:\"apache\",extensions:[\"mcurl\"]},\"text/vnd.curl.scurl\":{source:\"apache\",extensions:[\"scurl\"]},\"text/vnd.dvb.subtitle\":{source:\"iana\",extensions:[\"sub\"]},\"text/vnd.fly\":{source:\"iana\",extensions:[\"fly\"]},\"text/vnd.fmi.flexstor\":{source:\"iana\",extensions:[\"flx\"]},\"text/vnd.graphviz\":{source:\"iana\",extensions:[\"gv\"]},\"text/vnd.in3d.3dml\":{source:\"iana\",extensions:[\"3dml\"]},\"text/vnd.in3d.spot\":{source:\"iana\",extensions:[\"spot\"]},\"text/vnd.wap.wml\":{source:\"iana\",extensions:[\"wml\"]},\"text/vnd.wap.wmlscript\":{source:\"iana\",extensions:[\"wmls\"]},\"text/vtt\":{charset:\"UTF-8\",compressible:!0,extensions:[\"vtt\"]},\"text/x-asm\":{source:\"apache\",extensions:[\"s\",\"asm\"]},\"text/x-c\":{source:\"apache\",extensions:[\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"]},\"text/x-component\":{source:\"nginx\",extensions:[\"htc\"]},\"text/x-fortran\":{source:\"apache\",extensions:[\"f\",\"for\",\"f77\",\"f90\"]},\"text/x-handlebars-template\":{extensions:[\"hbs\"]},\"text/x-java-source\":{source:\"apache\",extensions:[\"java\"]},\"text/x-lua\":{extensions:[\"lua\"]},\"text/x-markdown\":{compressible:!0,extensions:[\"mkd\"]},\"text/x-nfo\":{source:\"apache\",extensions:[\"nfo\"]},\"text/x-opml\":{source:\"apache\",extensions:[\"opml\"]},\"text/x-org\":{compressible:!0,extensions:[\"org\"]},\"text/x-pascal\":{source:\"apache\",extensions:[\"p\",\"pas\"]},\"text/x-processing\":{compressible:!0,extensions:[\"pde\"]},\"text/x-sass\":{extensions:[\"sass\"]},\"text/x-scss\":{extensions:[\"scss\"]},\"text/x-setext\":{source:\"apache\",extensions:[\"etx\"]},\"text/x-sfv\":{source:\"apache\",extensions:[\"sfv\"]},\"text/x-suse-ymp\":{compressible:!0,extensions:[\"ymp\"]},\"text/x-uuencode\":{source:\"apache\",extensions:[\"uu\"]},\"text/xml\":{source:\"iana\",compressible:!0,extensions:[\"xml\"]},\"text/yaml\":{extensions:[\"yaml\",\"yml\"]},\"video/mp4\":{source:\"iana\",compressible:!1,extensions:[\"mp4\",\"mp4v\",\"mpg4\"]},\"video/ogg\":{source:\"iana\",compressible:!1,extensions:[\"ogv\"]},\"video/webm\":{source:\"apache\",compressible:!1,extensions:[\"webm\"]}};","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n"]}